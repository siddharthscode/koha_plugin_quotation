[% INCLUDE 'doc-head-open.inc' %]
 <title>Koha: Quotation </title>
[% INCLUDE 'doc-head-close.inc' %]

<script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"></script>

</head>
<body>
[% INCLUDE 'header.inc' %]
[% INCLUDE 'cat-search.inc' %]

<div id="breadcrumbs">
<a href="/cgi-bin/koha/mainpage.pl">Home</a> 
&rsaquo; <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a> 
&rsaquo; Quotations 
&rsaquo; Select Indent
&rsaquo; Quotation Generation
</div>

<div class="main container-fluid">

    <p>
        <form>
            <input type="button" value="Create Excel" onclick="createXLSX()">
        </form>
    </p>
    <div class="col-sm-10 col-sm-push-2">
            <main>
        
                <h3>Koha: Quotation</h3>
                    
                <!-- Notice our form here has no 'action', this is good, it means that our forms will always get passed back to 'plugins/run.pl'. You could hard code it instead if you prefer -->
                <form method="get">
                    <!-- Always pass these two parameters so the plugin system knows what to execute! -->
                    <input type="hidden" name="class" value="[% CLASS | html %]"/>
                    <input type="hidden" name="method" value="[% METHOD | html %]"/>
                    
                    <table class="indentation list">
                    <thead>
                    <tr>
                    	<th>Indent No.</th>
                    	<th>Author</th>
                    	<th>Title</th>
                     <th>Ed/Year</th>
                     <th>Publisher</th>
                     <th>List Price of the Book (Single Copy)</th>
                     <th>Conversion Rate</th>
                     <th>Discount</th>
                     <th>QTY</th>
                     <th>Total Price (INR)</th>
                    </tr>
                    </thead>
                    
                    <tbody>
                    
                     [% FOREACH indentation IN indentation_list %]
                     <tr>
                     	     <td> [% indentation.indentationid %] </td>
                     	     <td> [% indentation.author %]> </td>
                     	     <td> [% indentation.title %] </td>
                           <td> [% indentation.publicationyear %] </td>
                           <td> [% indentation.publishercode %] </td>
                           <td>  </td>
                           <td>  </td>
                           <td>  </td>
                           <td> [% indentation.quantity %] </td>
                           <td>  </td>
                           
                     </tr>
                     [% END %]
                   
                    	
                    	
                    </tbody>
                    </table>
                    
                </form>
            </main>
        </div>
        <script>
        function createXLSX() {
            var data = [
              ["Vendor Name", , , , "Quotation Address to: Dy. Librarian, Indian Institute of Technology Hyderabad, Kandi, Sangareddy, Medak (District) - PIN-502284, Telangana, India", , , , , , ],
              [ , , , , , , , , , , ],
              [ , , , , , , , , , , ],
              [ "Indent No. & Date", , , , "Vendor Quotation No & Date", , , , , , ],
              [ "SL.No", "Indent. NO", "Author", "Title", "Ed/Year", "Publisher", "List Price of the Book (Single Copy)", "Conversion Rate", "Discount", "QTY", "Total Price (INR)"],

            ];
            
            const merge = [
              { s: { r: 0, c: 0 }, e: { r: 2, c: 3 } }, { s: { r: 0, c: 4 }, e: { r: 2, c: 10 } },
              { s: { r: 3, c: 0 }, e: { r: 3, c: 1 } }, { s: { r: 3, c: 4 }, e: { r: 3, c: 6  } }, { s: { r: 3, c: 7 }, e: { r: 3, c: 10} }, 
            ];

            var workbook = XLSX.utils.book_new(),
                worksheet = XLSX.utils.aoa_to_sheet(data);
            workbook.SheetNames.push("Sheet1");
            workbook.Sheets["Sheet1"] = worksheet;

            workbook.Sheets["Sheet1"]["!merges"] = merge;
        
            XLSX.writeFile(workbook, "demo.xlsx");
            
            
            /*  // another way to try downloading .xlsx file
            var wbout = XLSX.write(workbook, {bookType:'xlsx', type: 'binary'});

            function s2ab(s) { 
                var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
                var view = new Uint8Array(buf);  //create uint8array as viewer
                for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
                return buf;    
            }

            $("#button-a").click(function(){
              saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), 'test.xlsx');
            });
            
            
            */
        }
        </script>
<\div>

[% INCLUDE 'intranet-bottom.inc' %]
